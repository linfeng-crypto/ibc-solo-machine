syntax = "proto3";

import "google/protobuf/timestamp.proto";

package ibc;

service Ibc {
    // Attempts to establish a connection to an IBC enabled chain
    rpc Connect (ConnectRequest) returns (ConnectResponse);

    // Mint tokens on IBC enabled chain
    rpc Mint (MintRequest) returns (MintResponse);

    // Burn tokens on IBC enabled chain
    rpc Burn (BurnRequest) returns (BurnResponse);

    // Updates signer's public key on IBC enabled chain for future messages from solo machine
    rpc UpdateSigner (UpdateSignerRequest) returns (UpdateSignerResponse);

    // Query account history
    rpc QueryHistory (QueryHistoryRequest) returns (QueryHistoryResponse);
}

message ConnectRequest {
    // Chain ID of IBC enabled chain to connect to
    string chain_id = 1;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 2;
    // Force create a new connection even if one already exists
    bool force = 3;
}

message ConnectResponse {}

message MintRequest {
    // Chain ID of IBC enabled chain to send to
    string chain_id = 1;
    // An optional request ID for tracking purposes
    optional string request_id = 2;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 3;
    // Amount of tokens to be sent
    uint64 amount = 4;
    // Denom of tokens to be sent
    string denom = 5;
    // Receiver address on IBC enabled chain (if this is not provided, tokens will be sent to signer's address)
    optional string receiver_address = 6;
    // Set the sign mode, (direct | amino-json)
    optional string sign_mode = 7;
}

message MintResponse {
    // Hash of transaction on IBC enabled chain (in hex)
    string transaction_hash = 1;
}

message BurnRequest {
    // Chain ID of IBC enabled chain to send to
    string chain_id = 1;
    // An optional request ID for tracking purposes
    optional string request_id = 2;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 3;
    // Amount of tokens to be sent
    uint64 amount = 4;
    // Denom of tokens to be sent
    string denom = 5;
}

message BurnResponse {
    // Hash of transaction on IBC enabled chain (in hex)
    string transaction_hash = 1;
}

message UpdateSignerRequest {
    // Chain ID of IBC enabled chain
    string chain_id = 1;
    // Memo value to be used in cosmos sdk transaction
    optional string memo = 2;
    // Hex encoded public key
    string new_public_key = 3;
    // Type of public key
    optional string public_key_algo = 4;
}

message UpdateSignerResponse {}

message QueryHistoryRequest {
    // Number of entries to query
    optional uint32 limit = 1;
    // Query offset
    optional uint32 offset = 2;
}

message QueryHistoryResponse {
    // List of operations performed
    repeated Operation operations = 1;
}

message Operation {
    // ID of operation
    int64 id = 1;
    // An optional request ID for tracking purposes
    optional string request_id = 2;
    // Account address
    string address = 3;
    // Denom of account
    string denom = 4;
    // Amount associated with operation
    uint64 amount = 5;
    // Type of operation (e.g., mint, burn, send, receive)
    string operation_type = 6;
    // On-chain transaction hash (in hex)
    string transaction_hash = 7;
    // Time at which this operation was done
    google.protobuf.Timestamp created_at = 8;
}
